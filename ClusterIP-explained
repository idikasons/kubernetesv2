apiVersion: v1
kind: Service
metadata:
  name: clusterip-svc
spec: 
  type: ClusterIP
  ports:
  - targetPort: 8080 <<< frontend Port
    port: 80   << backend port
    protocol: TCP
  selector:
    app: backend-app     << your backend pod label name 
 

### Below can be a continuation to create a pod and use this clusterIP


apiVersion: v1
kind: Pod
metadata:
  name: tomcat-pod
  labels: 
    app: backend-app
    project: signature-app
spec:
  containers:
    - name: tomcat-container
      image: tomcat
      ports:
        - name: tomcat-pod-port
          containerPort: 8080


# First definition creates the (ClusterIP) named clusterip-svc, mapped to the pod (identified using the selector label (backend-app)
# Second definition creates the pod with labels (backend-app and signature-app). This should come first in the definition anyways. This is just an example
